name: 'GCP: Build to GCR & Deploy to Cloud Run'
on:
  workflow_call:
    inputs:
      dockerfile:
        description: Path of dockerfile
        type: string
        default: 'Dockerfile'
        required: false
      gcp_project_id:
        description: GCP project id
        type: string
        required: false
        default: ai4nature
      gcp_container_registry:
        description: GCP container registry
        type: string
        required: false
        default: ai4nature
      region_id:
        description: GCP region ID
        type: string
        required: false
        default: europe-west2
      vars:
        description: GCP vars
        type: string
        required: false
      secrets:
        description: GCP secrets
        type: string
        required: false
    secrets:
      workload-indentity-provider:
        required: true
      service-account:
        required: true
    
jobs:
  build-to-gcr:
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      IMAGE_DIR: "${{ inputs.gcp_container_registry }}/${{ inputs.gcp_project_id }}"
    steps:
      # v4.1.2 Match 2024 https://github.com/actions/checkout/tags
      - name: 'Git checkout'
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633

      # v1.2.0 Match 2023 https://github.com/MariachiBear/get-repo-name-action/tags
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@ee2f35e10cc51b116d3c06a93e370de1103e0a14

      - name: 'GCP auth'
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.workload-indentity-provider }}
          service_account: ${{ secrets.service-account }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      
      - name: 'Build Docker Image'
        env:
          IMAGE_TAG: ${{ steps.repo-name.outputs.repository-name }}
        run: docker build -t ${{ env.IMAGE_TAG }} -f ${{ inputs.dockerfile }} .

      - name: 'Login to GCR'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.gcp_container_registry }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 'Push Docker Image to Artifact Registry'
        env:
          IMAGE_TAG: ${{ steps.repo-name.outputs.repository-name }}
          IMAGE_PATH: "${{ env.IMAGE_DIR }}/api/${{ steps.repo-name.outputs.repository-name }}"
        run:  |-
          docker tag ${{ env.IMAGE_TAG }} ${{ env.IMAGE_PATH }}:latest
          docker push ${{ env.IMAGE_PATH }} --all-tags

      - name: 'Deploy to Cloud Run'
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2.2.0
        env:
          IMAGE_PATH: "${{ env.IMAGE_DIR }}/api/${{ steps.repo-name.outputs.repository-name }}"
        with:
          service: '${{ steps.repo-name.outputs.repository-name }}'
          region: ${{ inputs.region_id }}
          image: '${{ env.IMAGE_PATH }}:latest'
          env_vars: ${{ inputs.vars }}
          secrets: ${{ inputs.secrets }}
